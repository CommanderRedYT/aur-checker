name: Check aur packages
on:
  push:
  workflow_dispatch:
  schedule:
    - cron: '0 */12 * * *'
  
jobs:
  generate-matrix:
    name: Generate ci matrix
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v4

      - name: Configure based on packages.json
        id: set-matrix
        run: | # { packages: [{ name: "foo" }]} => [foo]
          echo "Generating matrix from packages.json"
          echo "Reading packages.json"
          packages=$(jq -r '.packages[].name' packages.json)
          echo "Found packages: $packages"
          # convert to json array
          matrix=$(echo $packages | jq -R -c 'split(" ")')
          echo "Generated matrix: $matrix"
          echo "matrix=$matrix" >> $GITHUB_OUTPUT

  check:
    name: Check aur package ${{ matrix.package }}
    runs-on: ubuntu-latest
    container:
      image: archlinux:latest
      options: --user root
    needs: generate-matrix
    strategy:
      matrix:
        package: ${{ fromJson(needs.generate-matrix.outputs.matrix) }}
      fail-fast: false
    steps:
      # clone yay
      - name: Install aur helper
        run: |
          pacman -Syu --noconfirm git base-devel sudo
          useradd -m -s /bin/bash -G wheel aur
          echo "aur ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers
          # switch to the new user
          # install yay
          su - aur -c 'git clone https://aur.archlinux.org/yay-bin.git /tmp/yay-bin'
          su - aur -c 'cd /tmp/yay-bin && makepkg --noconfirm -si'

          # check if yay is installed
          if ! command -v yay &> /dev/null
          then
              echo "yay could not be installed"
              exit 1
          fi


      - name: Install aur package ${{ matrix.package }}
        id: install
        continue-on-error: true
        run: |
          set -e
          # install the package
          su - aur -c "yay --noconfirm -S ${{ matrix.package }} 2>&1 | tee /tmp/install.log"
          # check if the package was installed
          if ! pacman -Q ${{ matrix.package }} &> /dev/null
          then
              echo "Package ${{ matrix.package }} could not be installed"
              exit 1
          fi
      
      - name: Remove aur package ${{ matrix.package }}
        id: remove
        continue-on-error: true
        run: |
          set -e
          # remove the package
          su - aur -c "yay --noconfirm -R ${{ matrix.package }} 2>&1 | tee /tmp/remove.log"
          # check if the package was removed
          if pacman -Q ${{ matrix.package }} &> /dev/null
          then
              echo "Package ${{ matrix.package }} could not be removed"
              exit 1
          fi
        
      - name: Upload install logs
        uses: actions/upload-artifact@v4
        with:
          name: aur-install-log-${{ matrix.package }}
          path: /tmp/install.log

      - name: Upload remove logs
        uses: actions/upload-artifact@v4
        with:
          name: aur-remove-log-${{ matrix.package }}
          path: /tmp/remove.log

      - name: Fail if install failed
        if: steps.install.outcome == 'failure'
        run: |
          echo "Package ${{ matrix.package }} failed to install."
          exit 1